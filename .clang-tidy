Checks: '-*,readability-identifier-naming'
CheckOptions:
  # Class Names
  - { key: readability-identifier-naming.ClassCase,          value: CamelCase }
  - { key: readability-identifier-naming.StructCase,         value: CamelCase }
  - { key: readability-identifier-naming.EnumCase,           value: CamelCase }
  - { key: readability-identifier-naming.AbstractClassPrefix,value: 'I' }

  - { key: readability-identifier-naming.TypeTemplateParameterPrefix, value: 'T' }
  - { key: readability-identifier-naming.TypeTemplateParameterSuffix, value: '' }
  - { key: readability-identifier-naming.TypeTemplateParameterCase, value: CamelCase }

  # Function Names
  - { key: readability-identifier-naming.FunctionCase,       value: lower_case }
  - { key: readability-identifier-naming.PublicMethodCase,   value: lowerCamelCase }
  - { key: readability-identifier-naming.PrivateMethodCase,  value: lower_case }

  # Variable Names
  - { key: readability-identifier-naming.VariableCase,       value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberCase,  value: lower_case }

  # Constants and Enum Values
  - { key: readability-identifier-naming.ConstantCase,       value: UPPER_CASE }
  - { key: readability-identifier-naming.EnumConstantCase,   value: UPPER_CASE }

  # Constant Expression
  - { key: readibility-identifier-naming.ConstexprFunctionCase, value: UPPER_CASE }

